                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module OSAL_ClockBLE
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _osalTimerUpdate
                                     12 	.globl _OSAL_timeSeconds
                                     13 	.globl _osalTimeUpdate
                                     14 	.globl _osal_setClock
                                     15 	.globl _osal_getClock
                                     16 	.globl _osal_ConvertUTCTime
                                     17 	.globl _osal_ConvertUTCSecs
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area INITIALIZED
      000000                         26 _timeMSec:
      000000                         27 	.ds 2
      000002                         28 _OSAL_timeSeconds::
      000002                         29 	.ds 4
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DABS (ABS)
                                     34 
                                     35 ; default segment ordering for linker
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area CONST
                                     40 	.area INITIALIZER
                                     41 	.area CODE
                                     42 
                                     43 ;--------------------------------------------------------
                                     44 ; global & static initialisations
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area GSINIT
                                     48 	.area GSFINAL
                                     49 	.area GSINIT
                                     50 ;--------------------------------------------------------
                                     51 ; Home
                                     52 ;--------------------------------------------------------
                                     53 	.area HOME
                                     54 	.area HOME
                                     55 ;--------------------------------------------------------
                                     56 ; code
                                     57 ;--------------------------------------------------------
                                     58 	.area CODE
                                     59 ;	./src/OSAL_ClockBLE.c: 59: void osalTimeUpdate( void )
                                     60 ;	-----------------------------------------
                                     61 ;	 function osalTimeUpdate
                                     62 ;	-----------------------------------------
      000000                         63 _osalTimeUpdate:
                                     64 ;	./src/OSAL_ClockBLE.c: 61: osalTimerUpdate( 1 );
      000000 4B 01            [ 1]   65 	push	#0x01
      000002 5F               [ 1]   66 	clrw	x
      000003 89               [ 2]   67 	pushw	x
      000004 4B 00            [ 1]   68 	push	#0x00
      000006 CDr00r00         [ 4]   69 	call	_osalTimerUpdate
      000009 5B 04            [ 2]   70 	addw	sp, #4
                                     71 ;	./src/OSAL_ClockBLE.c: 62: osalClockUpdate( 1 );
      00000B 4B 01            [ 1]   72 	push	#0x01
      00000D 4B 00            [ 1]   73 	push	#0x00
      00000F CDr00r14         [ 4]   74 	call	_osalClockUpdate
      000012 85               [ 2]   75 	popw	x
                                     76 ;	./src/OSAL_ClockBLE.c: 63: }
      000013 81               [ 4]   77 	ret
                                     78 ;	./src/OSAL_ClockBLE.c: 74: static void osalClockUpdate( uint16 elapsedMSec )
                                     79 ;	-----------------------------------------
                                     80 ;	 function osalClockUpdate
                                     81 ;	-----------------------------------------
      000014                         82 _osalClockUpdate:
      000014 52 08            [ 2]   83 	sub	sp, #8
                                     84 ;	./src/OSAL_ClockBLE.c: 77: timeMSec += elapsedMSec;
      000016 CEu00u00         [ 2]   85 	ldw	x, _timeMSec+0
      000019 72 FB 0B         [ 2]   86 	addw	x, (0x0b, sp)
      00001C CFu00u00         [ 2]   87 	ldw	_timeMSec+0, x
                                     88 ;	./src/OSAL_ClockBLE.c: 80: if ( timeMSec >= 1000 )
      00001F 90 CEu00u00      [ 2]   89 	ldw	y, _timeMSec+0
      000023 90 A3 03 E8      [ 2]   90 	cpw	y, #0x03e8
      000027 25 2F            [ 1]   91 	jrc	00103$
                                     92 ;	./src/OSAL_ClockBLE.c: 82: OSAL_timeSeconds += timeMSec / 1000;
      000029 90 89            [ 2]   93 	pushw	y
      00002B 93               [ 1]   94 	ldw	x, y
      00002C 90 AE 03 E8      [ 2]   95 	ldw	y, #0x03e8
      000030 65               [ 2]   96 	divw	x, y
      000031 90 85            [ 2]   97 	popw	y
      000033 4F               [ 1]   98 	clr	a
      000034 0F 01            [ 1]   99 	clr	(0x01, sp)
      000036 72 BBu00u04      [ 2]  100 	addw	x, _OSAL_timeSeconds+2
      00003A C9u00u03         [ 1]  101 	adc	a, _OSAL_timeSeconds+1
      00003D 6B 06            [ 1]  102 	ld	(0x06, sp), a
      00003F 7B 01            [ 1]  103 	ld	a, (0x01, sp)
      000041 C9u00u02         [ 1]  104 	adc	a, _OSAL_timeSeconds+0
      000044 6B 05            [ 1]  105 	ld	(0x05, sp), a
      000046 CFu00u04         [ 2]  106 	ldw	_OSAL_timeSeconds+2, x
      000049 1E 05            [ 2]  107 	ldw	x, (0x05, sp)
      00004B CFu00u02         [ 2]  108 	ldw	_OSAL_timeSeconds+0, x
                                    109 ;	./src/OSAL_ClockBLE.c: 83: timeMSec = timeMSec % 1000;
      00004E 93               [ 1]  110 	ldw	x, y
      00004F 90 AE 03 E8      [ 2]  111 	ldw	y, #0x03e8
      000053 65               [ 2]  112 	divw	x, y
      000054 90 CFu00u00      [ 2]  113 	ldw	_timeMSec+0, y
      000058                        114 00103$:
                                    115 ;	./src/OSAL_ClockBLE.c: 85: }
      000058 5B 08            [ 2]  116 	addw	sp, #8
      00005A 81               [ 4]  117 	ret
                                    118 ;	./src/OSAL_ClockBLE.c: 98: void osal_setClock( UTCTime newTime )
                                    119 ;	-----------------------------------------
                                    120 ;	 function osal_setClock
                                    121 ;	-----------------------------------------
      00005B                        122 _osal_setClock:
                                    123 ;	./src/OSAL_ClockBLE.c: 100: OSAL_timeSeconds = newTime;
      00005B 1E 05            [ 2]  124 	ldw	x, (0x05, sp)
      00005D 16 03            [ 2]  125 	ldw	y, (0x03, sp)
      00005F CFu00u04         [ 2]  126 	ldw	_OSAL_timeSeconds+2, x
      000062 90 CFu00u02      [ 2]  127 	ldw	_OSAL_timeSeconds+0, y
                                    128 ;	./src/OSAL_ClockBLE.c: 101: }
      000066 81               [ 4]  129 	ret
                                    130 ;	./src/OSAL_ClockBLE.c: 115: UTCTime osal_getClock( void )
                                    131 ;	-----------------------------------------
                                    132 ;	 function osal_getClock
                                    133 ;	-----------------------------------------
      000067                        134 _osal_getClock:
                                    135 ;	./src/OSAL_ClockBLE.c: 117: return ( OSAL_timeSeconds );
      000067 CEu00u04         [ 2]  136 	ldw	x, _OSAL_timeSeconds+2
      00006A 90 CEu00u02      [ 2]  137 	ldw	y, _OSAL_timeSeconds+0
                                    138 ;	./src/OSAL_ClockBLE.c: 118: }
      00006E 81               [ 4]  139 	ret
                                    140 ;	./src/OSAL_ClockBLE.c: 132: void osal_ConvertUTCTime( UTCTimeStruct *tm, UTCTime secTime )
                                    141 ;	-----------------------------------------
                                    142 ;	 function osal_ConvertUTCTime
                                    143 ;	-----------------------------------------
      00006F                        144 _osal_ConvertUTCTime:
      00006F 52 12            [ 2]  145 	sub	sp, #18
                                    146 ;	./src/OSAL_ClockBLE.c: 136: uint32 day = secTime % DAY;
      000071 4B 80            [ 1]  147 	push	#0x80
      000073 4B 51            [ 1]  148 	push	#0x51
      000075 4B 01            [ 1]  149 	push	#0x01
      000077 4B 00            [ 1]  150 	push	#0x00
      000079 1E 1D            [ 2]  151 	ldw	x, (0x1d, sp)
      00007B 89               [ 2]  152 	pushw	x
      00007C 1E 1D            [ 2]  153 	ldw	x, (0x1d, sp)
      00007E 89               [ 2]  154 	pushw	x
      00007F CDr00r00         [ 4]  155 	call	__modulong
      000082 5B 08            [ 2]  156 	addw	sp, #8
      000084 1F 0F            [ 2]  157 	ldw	(0x0f, sp), x
      000086 17 0D            [ 2]  158 	ldw	(0x0d, sp), y
                                    159 ;	./src/OSAL_ClockBLE.c: 137: tm->seconds = day % 60UL;
      000088 16 15            [ 2]  160 	ldw	y, (0x15, sp)
      00008A 17 01            [ 2]  161 	ldw	(0x01, sp), y
      00008C 4B 3C            [ 1]  162 	push	#0x3c
      00008E 5F               [ 1]  163 	clrw	x
      00008F 89               [ 2]  164 	pushw	x
      000090 4B 00            [ 1]  165 	push	#0x00
      000092 1E 13            [ 2]  166 	ldw	x, (0x13, sp)
      000094 89               [ 2]  167 	pushw	x
      000095 1E 13            [ 2]  168 	ldw	x, (0x13, sp)
      000097 89               [ 2]  169 	pushw	x
      000098 CDr00r00         [ 4]  170 	call	__modulong
      00009B 5B 08            [ 2]  171 	addw	sp, #8
      00009D 9F               [ 1]  172 	ld	a, xl
      00009E 1E 01            [ 2]  173 	ldw	x, (0x01, sp)
      0000A0 F7               [ 1]  174 	ld	(x), a
                                    175 ;	./src/OSAL_ClockBLE.c: 138: tm->minutes = (day % 3600UL) / 60UL;
      0000A1 1E 01            [ 2]  176 	ldw	x, (0x01, sp)
      0000A3 5C               [ 1]  177 	incw	x
      0000A4 1F 11            [ 2]  178 	ldw	(0x11, sp), x
      0000A6 4B 10            [ 1]  179 	push	#0x10
      0000A8 4B 0E            [ 1]  180 	push	#0x0e
      0000AA 5F               [ 1]  181 	clrw	x
      0000AB 89               [ 2]  182 	pushw	x
      0000AC 1E 13            [ 2]  183 	ldw	x, (0x13, sp)
      0000AE 89               [ 2]  184 	pushw	x
      0000AF 1E 13            [ 2]  185 	ldw	x, (0x13, sp)
      0000B1 89               [ 2]  186 	pushw	x
      0000B2 CDr00r00         [ 4]  187 	call	__modulong
      0000B5 5B 08            [ 2]  188 	addw	sp, #8
      0000B7 4B 3C            [ 1]  189 	push	#0x3c
      0000B9 4B 00            [ 1]  190 	push	#0x00
      0000BB 4B 00            [ 1]  191 	push	#0x00
      0000BD 4B 00            [ 1]  192 	push	#0x00
      0000BF 89               [ 2]  193 	pushw	x
      0000C0 90 89            [ 2]  194 	pushw	y
      0000C2 CDr00r00         [ 4]  195 	call	__divulong
      0000C5 5B 08            [ 2]  196 	addw	sp, #8
      0000C7 9F               [ 1]  197 	ld	a, xl
      0000C8 1E 11            [ 2]  198 	ldw	x, (0x11, sp)
      0000CA F7               [ 1]  199 	ld	(x), a
                                    200 ;	./src/OSAL_ClockBLE.c: 139: tm->hour = day / 3600UL;
      0000CB 1E 01            [ 2]  201 	ldw	x, (0x01, sp)
      0000CD 5C               [ 1]  202 	incw	x
      0000CE 5C               [ 1]  203 	incw	x
      0000CF 1F 11            [ 2]  204 	ldw	(0x11, sp), x
      0000D1 4B 10            [ 1]  205 	push	#0x10
      0000D3 4B 0E            [ 1]  206 	push	#0x0e
      0000D5 5F               [ 1]  207 	clrw	x
      0000D6 89               [ 2]  208 	pushw	x
      0000D7 1E 13            [ 2]  209 	ldw	x, (0x13, sp)
      0000D9 89               [ 2]  210 	pushw	x
      0000DA 1E 13            [ 2]  211 	ldw	x, (0x13, sp)
      0000DC 89               [ 2]  212 	pushw	x
      0000DD CDr00r00         [ 4]  213 	call	__divulong
      0000E0 5B 08            [ 2]  214 	addw	sp, #8
      0000E2 9F               [ 1]  215 	ld	a, xl
      0000E3 1E 11            [ 2]  216 	ldw	x, (0x11, sp)
      0000E5 F7               [ 1]  217 	ld	(x), a
                                    218 ;	./src/OSAL_ClockBLE.c: 144: uint16 numDays = secTime / DAY;
      0000E6 4B 80            [ 1]  219 	push	#0x80
      0000E8 4B 51            [ 1]  220 	push	#0x51
      0000EA 4B 01            [ 1]  221 	push	#0x01
      0000EC 4B 00            [ 1]  222 	push	#0x00
      0000EE 1E 1D            [ 2]  223 	ldw	x, (0x1d, sp)
      0000F0 89               [ 2]  224 	pushw	x
      0000F1 1E 1D            [ 2]  225 	ldw	x, (0x1d, sp)
      0000F3 89               [ 2]  226 	pushw	x
      0000F4 CDr00r00         [ 4]  227 	call	__divulong
      0000F7 5B 08            [ 2]  228 	addw	sp, #8
      0000F9 1F 03            [ 2]  229 	ldw	(0x03, sp), x
                                    230 ;	./src/OSAL_ClockBLE.c: 145: tm->year = BEGYEAR;
      0000FB 1E 01            [ 2]  231 	ldw	x, (0x01, sp)
      0000FD 1C 00 05         [ 2]  232 	addw	x, #0x0005
      000100 1F 05            [ 2]  233 	ldw	(0x05, sp), x
      000102 90 AE 07 D0      [ 2]  234 	ldw	y, #0x07d0
      000106 FF               [ 2]  235 	ldw	(x), y
                                    236 ;	./src/OSAL_ClockBLE.c: 146: while ( numDays >= YearLength( tm->year ) )
      000107                        237 00101$:
      000107 1E 05            [ 2]  238 	ldw	x, (0x05, sp)
      000109 FE               [ 2]  239 	ldw	x, (x)
      00010A 1F 07            [ 2]  240 	ldw	(0x07, sp), x
      00010C 89               [ 2]  241 	pushw	x
      00010D 90 AE 01 90      [ 2]  242 	ldw	y, #0x0190
      000111 65               [ 2]  243 	divw	x, y
      000112 17 0B            [ 2]  244 	ldw	(0x0b, sp), y
      000114 85               [ 2]  245 	popw	x
      000115 89               [ 2]  246 	pushw	x
      000116 90 AE 00 64      [ 2]  247 	ldw	y, #0x0064
      00011A 65               [ 2]  248 	divw	x, y
      00011B 17 0D            [ 2]  249 	ldw	(0x0d, sp), y
      00011D 85               [ 2]  250 	popw	x
      00011E 9F               [ 1]  251 	ld	a, xl
      00011F A4 03            [ 1]  252 	and	a, #0x03
      000121 6B 0E            [ 1]  253 	ld	(0x0e, sp), a
      000123 0F 0D            [ 1]  254 	clr	(0x0d, sp)
      000125 1E 09            [ 2]  255 	ldw	x, (0x09, sp)
      000127 27 08            [ 1]  256 	jreq	00112$
      000129 1E 0B            [ 2]  257 	ldw	x, (0x0b, sp)
      00012B 27 08            [ 1]  258 	jreq	00109$
      00012D 1E 0D            [ 2]  259 	ldw	x, (0x0d, sp)
      00012F 26 04            [ 1]  260 	jrne	00109$
      000131                        261 00112$:
      000131 AE 01 6E         [ 2]  262 	ldw	x, #0x016e
      000134 BC                     263 	.byte 0xbc
      000135                        264 00109$:
      000135 AE 01 6D         [ 2]  265 	ldw	x, #0x016d
      000138                        266 00110$:
      000138 16 03            [ 2]  267 	ldw	y, (0x03, sp)
      00013A 17 0F            [ 2]  268 	ldw	(0x0f, sp), y
      00013C 1F 11            [ 2]  269 	ldw	(0x11, sp), x
      00013E 1E 0F            [ 2]  270 	ldw	x, (0x0f, sp)
      000140 13 11            [ 2]  271 	cpw	x, (0x11, sp)
      000142 25 22            [ 1]  272 	jrc	00103$
                                    273 ;	./src/OSAL_ClockBLE.c: 148: numDays -= YearLength( tm->year );
      000144 1E 09            [ 2]  274 	ldw	x, (0x09, sp)
      000146 27 08            [ 1]  275 	jreq	00120$
      000148 1E 0B            [ 2]  276 	ldw	x, (0x0b, sp)
      00014A 27 08            [ 1]  277 	jreq	00117$
      00014C 1E 0D            [ 2]  278 	ldw	x, (0x0d, sp)
      00014E 26 04            [ 1]  279 	jrne	00117$
      000150                        280 00120$:
      000150 AE 01 6E         [ 2]  281 	ldw	x, #0x016e
      000153 BC                     282 	.byte 0xbc
      000154                        283 00117$:
      000154 AE 01 6D         [ 2]  284 	ldw	x, #0x016d
      000157                        285 00118$:
      000157 50               [ 2]  286 	negw	x
      000158 72 FB 0F         [ 2]  287 	addw	x, (0x0f, sp)
      00015B 1F 03            [ 2]  288 	ldw	(0x03, sp), x
                                    289 ;	./src/OSAL_ClockBLE.c: 149: tm->year++;
      00015D 1E 07            [ 2]  290 	ldw	x, (0x07, sp)
      00015F 5C               [ 1]  291 	incw	x
      000160 16 05            [ 2]  292 	ldw	y, (0x05, sp)
      000162 90 FF            [ 2]  293 	ldw	(y), x
      000164 20 A1            [ 2]  294 	jra	00101$
      000166                        295 00103$:
                                    296 ;	./src/OSAL_ClockBLE.c: 152: tm->month = 0;
      000166 1E 01            [ 2]  297 	ldw	x, (0x01, sp)
      000168 1C 00 04         [ 2]  298 	addw	x, #0x0004
      00016B 1F 0E            [ 2]  299 	ldw	(0x0e, sp), x
      00016D 7F               [ 1]  300 	clr	(x)
                                    301 ;	./src/OSAL_ClockBLE.c: 153: while ( numDays >= monthLength( IsLeapYear( tm->year ), tm->month ) )
      00016E                        302 00104$:
      00016E 1E 0E            [ 2]  303 	ldw	x, (0x0e, sp)
      000170 F6               [ 1]  304 	ld	a, (x)
                                    305 ;	./src/OSAL_ClockBLE.c: 146: while ( numDays >= YearLength( tm->year ) )
      000171 1E 05            [ 2]  306 	ldw	x, (0x05, sp)
      000173 FE               [ 2]  307 	ldw	x, (x)
                                    308 ;	./src/OSAL_ClockBLE.c: 153: while ( numDays >= monthLength( IsLeapYear( tm->year ), tm->month ) )
      000174 1F 11            [ 2]  309 	ldw	(0x11, sp), x
      000176 90 AE 01 90      [ 2]  310 	ldw	y, #0x0190
      00017A 65               [ 2]  311 	divw	x, y
      00017B 90 5D            [ 2]  312 	tnzw	y
      00017D 27 16            [ 1]  313 	jreq	00126$
      00017F 1E 11            [ 2]  314 	ldw	x, (0x11, sp)
      000181 90 AE 00 64      [ 2]  315 	ldw	y, #0x0064
      000185 65               [ 2]  316 	divw	x, y
      000186 90 5D            [ 2]  317 	tnzw	y
      000188 27 08            [ 1]  318 	jreq	00125$
      00018A 88               [ 1]  319 	push	a
      00018B 7B 13            [ 1]  320 	ld	a, (0x13, sp)
      00018D A5 03            [ 1]  321 	bcp	a, #0x03
      00018F 84               [ 1]  322 	pop	a
      000190 27 03            [ 1]  323 	jreq	00126$
      000192                        324 00125$:
      000192 5F               [ 1]  325 	clrw	x
      000193 20 04            [ 2]  326 	jra	00127$
      000195                        327 00126$:
      000195 41               [ 1]  328 	exg	a, xl
      000196 A6 01            [ 1]  329 	ld	a, #0x01
      000198 41               [ 1]  330 	exg	a, xl
      000199                        331 00127$:
      000199 88               [ 1]  332 	push	a
      00019A 9F               [ 1]  333 	ld	a, xl
      00019B 88               [ 1]  334 	push	a
      00019C CDr01rFA         [ 4]  335 	call	_monthLength
      00019F 85               [ 2]  336 	popw	x
      0001A0 6B 12            [ 1]  337 	ld	(0x12, sp), a
      0001A2 0F 11            [ 1]  338 	clr	(0x11, sp)
      0001A4 1E 03            [ 2]  339 	ldw	x, (0x03, sp)
      0001A6 13 11            [ 2]  340 	cpw	x, (0x11, sp)
      0001A8 25 47            [ 1]  341 	jrc	00106$
                                    342 ;	./src/OSAL_ClockBLE.c: 155: numDays -= monthLength( IsLeapYear( tm->year ), tm->month );
      0001AA 1E 0E            [ 2]  343 	ldw	x, (0x0e, sp)
      0001AC F6               [ 1]  344 	ld	a, (x)
      0001AD 6B 10            [ 1]  345 	ld	(0x10, sp), a
                                    346 ;	./src/OSAL_ClockBLE.c: 146: while ( numDays >= YearLength( tm->year ) )
      0001AF 1E 05            [ 2]  347 	ldw	x, (0x05, sp)
      0001B1 FE               [ 2]  348 	ldw	x, (x)
      0001B2 9F               [ 1]  349 	ld	a, xl
                                    350 ;	./src/OSAL_ClockBLE.c: 155: numDays -= monthLength( IsLeapYear( tm->year ), tm->month );
      0001B3 89               [ 2]  351 	pushw	x
      0001B4 97               [ 1]  352 	ld	xl, a
      0001B5 90 AE 01 90      [ 2]  353 	ldw	y, #0x0190
      0001B9 65               [ 2]  354 	divw	x, y
      0001BA 17 13            [ 2]  355 	ldw	(0x13, sp), y
      0001BC 85               [ 2]  356 	popw	x
      0001BD 16 11            [ 2]  357 	ldw	y, (0x11, sp)
      0001BF 27 13            [ 1]  358 	jreq	00132$
      0001C1 89               [ 2]  359 	pushw	x
      0001C2 97               [ 1]  360 	ld	xl, a
      0001C3 90 AE 00 64      [ 2]  361 	ldw	y, #0x0064
      0001C7 65               [ 2]  362 	divw	x, y
      0001C8 85               [ 2]  363 	popw	x
      0001C9 90 5D            [ 2]  364 	tnzw	y
      0001CB 27 04            [ 1]  365 	jreq	00131$
      0001CD A5 03            [ 1]  366 	bcp	a, #0x03
      0001CF 27 03            [ 1]  367 	jreq	00132$
      0001D1                        368 00131$:
      0001D1 5F               [ 1]  369 	clrw	x
      0001D2 20 03            [ 2]  370 	jra	00133$
      0001D4                        371 00132$:
      0001D4 A6 01            [ 1]  372 	ld	a, #0x01
      0001D6 97               [ 1]  373 	ld	xl, a
      0001D7                        374 00133$:
      0001D7 7B 10            [ 1]  375 	ld	a, (0x10, sp)
      0001D9 88               [ 1]  376 	push	a
      0001DA 9F               [ 1]  377 	ld	a, xl
      0001DB 88               [ 1]  378 	push	a
      0001DC CDr01rFA         [ 4]  379 	call	_monthLength
      0001DF 85               [ 2]  380 	popw	x
      0001E0 5F               [ 1]  381 	clrw	x
      0001E1 97               [ 1]  382 	ld	xl, a
      0001E2 16 03            [ 2]  383 	ldw	y, (0x03, sp)
      0001E4 1F 11            [ 2]  384 	ldw	(0x11, sp), x
      0001E6 72 F2 11         [ 2]  385 	subw	y, (0x11, sp)
      0001E9 17 03            [ 2]  386 	ldw	(0x03, sp), y
                                    387 ;	./src/OSAL_ClockBLE.c: 156: tm->month++;
      0001EB 1E 0E            [ 2]  388 	ldw	x, (0x0e, sp)
      0001ED 7C               [ 1]  389 	inc	(x)
      0001EE CCr01r6E         [ 2]  390 	jp	00104$
      0001F1                        391 00106$:
                                    392 ;	./src/OSAL_ClockBLE.c: 159: tm->day = numDays;
      0001F1 1E 01            [ 2]  393 	ldw	x, (0x01, sp)
      0001F3 7B 04            [ 1]  394 	ld	a, (0x04, sp)
      0001F5 E7 03            [ 1]  395 	ld	(0x0003, x), a
                                    396 ;	./src/OSAL_ClockBLE.c: 161: }
      0001F7 5B 12            [ 2]  397 	addw	sp, #18
      0001F9 81               [ 4]  398 	ret
                                    399 ;	./src/OSAL_ClockBLE.c: 172: static uint8 monthLength( uint8 lpyr, uint8 mon )
                                    400 ;	-----------------------------------------
                                    401 ;	 function monthLength
                                    402 ;	-----------------------------------------
      0001FA                        403 _monthLength:
                                    404 ;	./src/OSAL_ClockBLE.c: 174: uint8 days = 31;
      0001FA A6 1F            [ 1]  405 	ld	a, #0x1f
      0001FC 97               [ 1]  406 	ld	xl, a
                                    407 ;	./src/OSAL_ClockBLE.c: 176: if ( mon == 1 ) // feb
      0001FD 7B 04            [ 1]  408 	ld	a, (0x04, sp)
      0001FF 4A               [ 1]  409 	dec	a
      000200 26 07            [ 1]  410 	jrne	00106$
                                    411 ;	./src/OSAL_ClockBLE.c: 178: days = ( 28 + lpyr );
      000202 7B 03            [ 1]  412 	ld	a, (0x03, sp)
      000204 AB 1C            [ 1]  413 	add	a, #0x1c
      000206 97               [ 1]  414 	ld	xl, a
      000207 20 10            [ 2]  415 	jra	00107$
      000209                        416 00106$:
                                    417 ;	./src/OSAL_ClockBLE.c: 182: if ( mon > 6 ) // aug-dec
      000209 7B 04            [ 1]  418 	ld	a, (0x04, sp)
      00020B A1 06            [ 1]  419 	cp	a, #0x06
      00020D 23 02            [ 2]  420 	jrule	00102$
                                    421 ;	./src/OSAL_ClockBLE.c: 184: mon--;
      00020F 0A 04            [ 1]  422 	dec	(0x04, sp)
      000211                        423 00102$:
                                    424 ;	./src/OSAL_ClockBLE.c: 187: if ( mon & 1 )
      000211 7B 04            [ 1]  425 	ld	a, (0x04, sp)
      000213 44               [ 1]  426 	srl	a
      000214 24 03            [ 1]  427 	jrnc	00107$
                                    428 ;	./src/OSAL_ClockBLE.c: 189: days = 30;
      000216 A6 1E            [ 1]  429 	ld	a, #0x1e
      000218 97               [ 1]  430 	ld	xl, a
      000219                        431 00107$:
                                    432 ;	./src/OSAL_ClockBLE.c: 193: return ( days );
      000219 9F               [ 1]  433 	ld	a, xl
                                    434 ;	./src/OSAL_ClockBLE.c: 194: }
      00021A 81               [ 4]  435 	ret
                                    436 ;	./src/OSAL_ClockBLE.c: 205: UTCTime osal_ConvertUTCSecs( UTCTimeStruct *tm )
                                    437 ;	-----------------------------------------
                                    438 ;	 function osal_ConvertUTCSecs
                                    439 ;	-----------------------------------------
      00021B                        440 _osal_ConvertUTCSecs:
      00021B 52 0C            [ 2]  441 	sub	sp, #12
                                    442 ;	./src/OSAL_ClockBLE.c: 210: seconds = (((tm->hour * 60UL) + tm->minutes) * 60UL) + tm->seconds;
      00021D 16 0F            [ 2]  443 	ldw	y, (0x0f, sp)
      00021F 17 0B            [ 2]  444 	ldw	(0x0b, sp), y
      000221 93               [ 1]  445 	ldw	x, y
      000222 E6 02            [ 1]  446 	ld	a, (0x2, x)
      000224 5F               [ 1]  447 	clrw	x
      000225 97               [ 1]  448 	ld	xl, a
      000226 90 5F            [ 1]  449 	clrw	y
      000228 89               [ 2]  450 	pushw	x
      000229 90 89            [ 2]  451 	pushw	y
      00022B 4B 3C            [ 1]  452 	push	#0x3c
      00022D 5F               [ 1]  453 	clrw	x
      00022E 89               [ 2]  454 	pushw	x
      00022F 4B 00            [ 1]  455 	push	#0x00
      000231 CDr00r00         [ 4]  456 	call	__mullong
      000234 5B 08            [ 2]  457 	addw	sp, #8
      000236 1F 09            [ 2]  458 	ldw	(0x09, sp), x
      000238 17 07            [ 2]  459 	ldw	(0x07, sp), y
      00023A 1E 0B            [ 2]  460 	ldw	x, (0x0b, sp)
      00023C E6 01            [ 1]  461 	ld	a, (0x1, x)
      00023E 90 5F            [ 1]  462 	clrw	y
      000240 5F               [ 1]  463 	clrw	x
      000241 90 97            [ 1]  464 	ld	yl, a
      000243 72 F9 09         [ 2]  465 	addw	y, (0x09, sp)
      000246 9F               [ 1]  466 	ld	a, xl
      000247 19 08            [ 1]  467 	adc	a, (0x08, sp)
      000249 02               [ 1]  468 	rlwa	x
      00024A 19 07            [ 1]  469 	adc	a, (0x07, sp)
      00024C 95               [ 1]  470 	ld	xh, a
      00024D 90 89            [ 2]  471 	pushw	y
      00024F 89               [ 2]  472 	pushw	x
      000250 4B 3C            [ 1]  473 	push	#0x3c
      000252 5F               [ 1]  474 	clrw	x
      000253 89               [ 2]  475 	pushw	x
      000254 4B 00            [ 1]  476 	push	#0x00
      000256 CDr00r00         [ 4]  477 	call	__mullong
      000259 5B 08            [ 2]  478 	addw	sp, #8
      00025B 1F 09            [ 2]  479 	ldw	(0x09, sp), x
      00025D 17 07            [ 2]  480 	ldw	(0x07, sp), y
      00025F 1E 0B            [ 2]  481 	ldw	x, (0x0b, sp)
      000261 F6               [ 1]  482 	ld	a, (x)
      000262 90 5F            [ 1]  483 	clrw	y
      000264 5F               [ 1]  484 	clrw	x
      000265 90 97            [ 1]  485 	ld	yl, a
      000267 72 F9 09         [ 2]  486 	addw	y, (0x09, sp)
      00026A 9F               [ 1]  487 	ld	a, xl
      00026B 19 08            [ 1]  488 	adc	a, (0x08, sp)
      00026D 02               [ 1]  489 	rlwa	x
      00026E 19 07            [ 1]  490 	adc	a, (0x07, sp)
      000270 95               [ 1]  491 	ld	xh, a
      000271 17 03            [ 2]  492 	ldw	(0x03, sp), y
      000273 1F 01            [ 2]  493 	ldw	(0x01, sp), x
                                    494 ;	./src/OSAL_ClockBLE.c: 215: uint16 days = tm->day;
      000275 1E 0B            [ 2]  495 	ldw	x, (0x0b, sp)
      000277 E6 03            [ 1]  496 	ld	a, (0x3, x)
      000279 5F               [ 1]  497 	clrw	x
      00027A 97               [ 1]  498 	ld	xl, a
      00027B 1F 05            [ 2]  499 	ldw	(0x05, sp), x
                                    500 ;	./src/OSAL_ClockBLE.c: 219: int8 month = tm->month;
      00027D 1E 0B            [ 2]  501 	ldw	x, (0x0b, sp)
      00027F E6 04            [ 1]  502 	ld	a, (0x4, x)
                                    503 ;	./src/OSAL_ClockBLE.c: 220: while ( --month >= 0 )
      000281 16 0B            [ 2]  504 	ldw	y, (0x0b, sp)
      000283 17 07            [ 2]  505 	ldw	(0x07, sp), y
      000285                        506 00101$:
      000285 4A               [ 1]  507 	dec	a
                                    508 ;	./src/OSAL_ClockBLE.c: 222: days += monthLength( IsLeapYear( tm->year ), month );
      000286 1E 07            [ 2]  509 	ldw	x, (0x07, sp)
      000288 EE 05            [ 2]  510 	ldw	x, (0x5, x)
                                    511 ;	./src/OSAL_ClockBLE.c: 220: while ( --month >= 0 )
      00028A 4D               [ 1]  512 	tnz	a
      00028B 2B 3F            [ 1]  513 	jrmi	00103$
                                    514 ;	./src/OSAL_ClockBLE.c: 222: days += monthLength( IsLeapYear( tm->year ), month );
      00028D 1F 09            [ 2]  515 	ldw	(0x09, sp), x
      00028F 90 AE 01 90      [ 2]  516 	ldw	y, #0x0190
      000293 65               [ 2]  517 	divw	x, y
      000294 17 0B            [ 2]  518 	ldw	(0x0b, sp), y
      000296 93               [ 1]  519 	ldw	x, y
      000297 27 16            [ 1]  520 	jreq	00110$
      000299 1E 09            [ 2]  521 	ldw	x, (0x09, sp)
      00029B 90 AE 00 64      [ 2]  522 	ldw	y, #0x0064
      00029F 65               [ 2]  523 	divw	x, y
      0002A0 90 5D            [ 2]  524 	tnzw	y
      0002A2 27 08            [ 1]  525 	jreq	00109$
      0002A4 88               [ 1]  526 	push	a
      0002A5 7B 0B            [ 1]  527 	ld	a, (0x0b, sp)
      0002A7 A5 03            [ 1]  528 	bcp	a, #0x03
      0002A9 84               [ 1]  529 	pop	a
      0002AA 27 03            [ 1]  530 	jreq	00110$
      0002AC                        531 00109$:
      0002AC 5F               [ 1]  532 	clrw	x
      0002AD 20 04            [ 2]  533 	jra	00111$
      0002AF                        534 00110$:
      0002AF 41               [ 1]  535 	exg	a, xl
      0002B0 A6 01            [ 1]  536 	ld	a, #0x01
      0002B2 41               [ 1]  537 	exg	a, xl
      0002B3                        538 00111$:
      0002B3 88               [ 1]  539 	push	a
      0002B4 88               [ 1]  540 	push	a
      0002B5 89               [ 2]  541 	pushw	x
      0002B6 5B 01            [ 2]  542 	addw	sp, #1
      0002B8 CDr01rFA         [ 4]  543 	call	_monthLength
      0002BB 85               [ 2]  544 	popw	x
      0002BC 97               [ 1]  545 	ld	xl, a
      0002BD 84               [ 1]  546 	pop	a
      0002BE 02               [ 1]  547 	rlwa	x
      0002BF 4F               [ 1]  548 	clr	a
      0002C0 01               [ 1]  549 	rrwa	x
      0002C1 16 05            [ 2]  550 	ldw	y, (0x05, sp)
      0002C3 1F 0B            [ 2]  551 	ldw	(0x0b, sp), x
      0002C5 72 F9 0B         [ 2]  552 	addw	y, (0x0b, sp)
      0002C8 17 05            [ 2]  553 	ldw	(0x05, sp), y
      0002CA 20 B9            [ 2]  554 	jra	00101$
      0002CC                        555 00103$:
                                    556 ;	./src/OSAL_ClockBLE.c: 228: uint16 year = tm->year;
                                    557 ;	./src/OSAL_ClockBLE.c: 229: while ( --year >= BEGYEAR )
      0002CC 1F 0B            [ 2]  558 	ldw	(0x0b, sp), x
      0002CE                        559 00104$:
      0002CE 1E 0B            [ 2]  560 	ldw	x, (0x0b, sp)
      0002D0 5A               [ 2]  561 	decw	x
      0002D1 1F 0B            [ 2]  562 	ldw	(0x0b, sp), x
      0002D3 1F 07            [ 2]  563 	ldw	(0x07, sp), x
      0002D5 A3 07 D0         [ 2]  564 	cpw	x, #0x07d0
      0002D8 25 2F            [ 1]  565 	jrc	00106$
                                    566 ;	./src/OSAL_ClockBLE.c: 231: days += YearLength( year );
      0002DA 1E 07            [ 2]  567 	ldw	x, (0x07, sp)
      0002DC 90 AE 01 90      [ 2]  568 	ldw	y, #0x0190
      0002E0 65               [ 2]  569 	divw	x, y
      0002E1 90 5D            [ 2]  570 	tnzw	y
      0002E3 27 12            [ 1]  571 	jreq	00118$
      0002E5 1E 07            [ 2]  572 	ldw	x, (0x07, sp)
      0002E7 90 AE 00 64      [ 2]  573 	ldw	y, #0x0064
      0002EB 65               [ 2]  574 	divw	x, y
      0002EC 17 09            [ 2]  575 	ldw	(0x09, sp), y
      0002EE 93               [ 1]  576 	ldw	x, y
      0002EF 27 0A            [ 1]  577 	jreq	00115$
      0002F1 7B 08            [ 1]  578 	ld	a, (0x08, sp)
      0002F3 A5 03            [ 1]  579 	bcp	a, #0x03
      0002F5 26 04            [ 1]  580 	jrne	00115$
      0002F7                        581 00118$:
      0002F7 AE 01 6E         [ 2]  582 	ldw	x, #0x016e
      0002FA BC                     583 	.byte 0xbc
      0002FB                        584 00115$:
      0002FB AE 01 6D         [ 2]  585 	ldw	x, #0x016d
      0002FE                        586 00116$:
      0002FE 16 05            [ 2]  587 	ldw	y, (0x05, sp)
      000300 17 09            [ 2]  588 	ldw	(0x09, sp), y
      000302 72 FB 09         [ 2]  589 	addw	x, (0x09, sp)
      000305 1F 05            [ 2]  590 	ldw	(0x05, sp), x
      000307 20 C5            [ 2]  591 	jra	00104$
      000309                        592 00106$:
                                    593 ;	./src/OSAL_ClockBLE.c: 236: seconds += (days * DAY);
      000309 16 05            [ 2]  594 	ldw	y, (0x05, sp)
      00030B 5F               [ 1]  595 	clrw	x
      00030C 90 89            [ 2]  596 	pushw	y
      00030E 89               [ 2]  597 	pushw	x
      00030F 4B 80            [ 1]  598 	push	#0x80
      000311 4B 51            [ 1]  599 	push	#0x51
      000313 4B 01            [ 1]  600 	push	#0x01
      000315 4B 00            [ 1]  601 	push	#0x00
      000317 CDr00r00         [ 4]  602 	call	__mullong
      00031A 5B 08            [ 2]  603 	addw	sp, #8
      00031C 51               [ 1]  604 	exgw	x, y
      00031D 72 F9 03         [ 2]  605 	addw	y, (0x03, sp)
      000320 9F               [ 1]  606 	ld	a, xl
      000321 19 02            [ 1]  607 	adc	a, (0x02, sp)
      000323 02               [ 1]  608 	rlwa	x
      000324 19 01            [ 1]  609 	adc	a, (0x01, sp)
      000326 95               [ 1]  610 	ld	xh, a
      000327 51               [ 1]  611 	exgw	x, y
                                    612 ;	./src/OSAL_ClockBLE.c: 239: return ( seconds );
                                    613 ;	./src/OSAL_ClockBLE.c: 240: }
      000328 5B 0C            [ 2]  614 	addw	sp, #12
      00032A 81               [ 4]  615 	ret
                                    616 	.area CODE
                                    617 	.area CONST
                                    618 	.area INITIALIZER
      000000                        619 __xinit__timeMSec:
      000000 00 00                  620 	.dw #0x0000
      000002                        621 __xinit__OSAL_timeSeconds:
      000002 00 00 00 00            622 	.byte #0x00, #0x00, #0x00, #0x00	; 0
                                    623 	.area CABS (ABS)
